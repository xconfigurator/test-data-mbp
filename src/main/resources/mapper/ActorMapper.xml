<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="liuyang.testdatambp.modules.actor.generator.mapper.ActorMapper">

    <resultMap id="BaseResultMap" type="liuyang.testdatambp.modules.actor.generator.entity.Actor">
            <id property="actorId" column="actor_id" jdbcType="SMALLINT"/>
            <result property="firstName" column="first_name" jdbcType="VARCHAR"/>
            <result property="lastName" column="last_name" jdbcType="VARCHAR"/>
            <result property="lastUpdate" column="last_update" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        actor_id,first_name,last_name,
        last_update
    </sql>

    <!-- IPage<Actor> selectPageActorVOCustomize(@Param("page") IPage<?> page, String lastName); -->
    <!--
        可以设置类型别名 application.yml mybatis-plus.type-aliases-package:
        设置好之后就可以使用类名，且不区分大小写。
        20220407 实测 ok
    -->
    <select id="selectPageActorVOCustomize"
            resultType="liuyang.testdatambp.modules.actor.generator.entity.Actor">
        select * from actor where last_name like concat('%', #{lastName}, '%')
    </select>
    <insert id="insertSelective">
        insert into actor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="actorId != null">actor_id,</if>
            <if test="firstName != null">first_name,</if>
            <if test="lastName != null">last_name,</if>
            <if test="lastUpdate != null">last_update,</if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="actorId != null">#{actorId,jdbcType=SMALLINT},</if>
            <if test="firstName != null">#{firstName,jdbcType=VARCHAR},</if>
            <if test="lastName != null">#{lastName,jdbcType=VARCHAR},</if>
            <if test="lastUpdate != null">#{lastUpdate,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <delete id="deleteByActorId">
        delete
        from actor
        where actor_id = #{actorId,jdbcType=NUMERIC}
    </delete>
    <update id="updateFirstNameByActorId">
        update actor
        set first_name = #{firstName,jdbcType=VARCHAR}
        where actor_id = #{actorId,jdbcType=NUMERIC}
    </update>
    <select id="selectByLastNameLike" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from actor
        where
        last_name like #{lastName,jdbcType=VARCHAR}
    </select>
    <select id="selectAllByLastUpdateBetween" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from actor
        where
        last_update between #{beginLastUpdate} and #{endLastUpdate}
    </select>
    <select id="selectAllOrderByLastName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from actor
        order by lastName
    </select>
</mapper>
